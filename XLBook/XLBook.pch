//
//  XLBook.pch
//  XLBook
//
//  Created by Lee on 2019/10/21.
//  Copyright © 2019 Lee. All rights reserved.
//

#ifndef XLBook_pch
#define XLBook_pch
#import <UIKit/UIKit.h>
#import "YYKit.h"
#import <MJExtension/MJExtension.h>
#import <Masonry/Masonry.h>
#import "LNSkinHelper.h"
#import "LNConst.h"
#import "LNRequest.h"
#import "LeeRunTimePush.h"
#import "MBProgressHUD+LNHUD.h"
#import "NotificationMacro.h"
#import "UINavigationController+FDFullscreenPopGesture.h"
#import "UtilsMacro.h"
#import "YYLabel+Add.h"
#import "UILabel+Add.h"
#import "XXSafeAreaInsets.h"
#import "DateTools.h"
#import "UIView+NewLine.h"
#import "UIButton+Add.h"
#import "UIButton+EnlargeTouchArea.h"
#import <ReactiveObjC/ReactiveObjC.h>
#import "XXHighLightButton.h"
#import "UIButton+ImagePosition.h"
#import "HUD.h"
#import "UIViewController+Add.h"
#import "NSString+Add.h"
#import "ToolsObj.h"
#import "XXDatabase.h"
#import <MJRefresh/MJRefresh.h>
#import "PYSearch.h"
static NSString *kBookTableName = @"XLBookTableName";
// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.
//日志
#ifdef DEBUG
# define LNLog(format,...); NSLog((@"方法名:%s , 行号:%d 行," format), __FUNCTION__, __LINE__, ##__VA_ARGS__);
#else
# define LNLog(format,...);
#endif

#define kIphone4 (kScreenWidth == 320.0&&kScreenHeight==480.0)?YES:NO
#define kIphone5 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(640, 1136), [[UIScreen mainScreen] currentMode].size) : NO)
#define kIphone6 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(750, 1334), [[UIScreen mainScreen] currentMode].size) : NO)
#define kIphone6p ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2208), [[UIScreen mainScreen] currentMode].size) : NO)
#define kIphoneX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)
#define KIphoneXMAX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size) : NO)
#define KIphoneXR ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? (CGSizeEqualToSize(CGSizeMake(750, 1624), [[UIScreen mainScreen] currentMode].size)||CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size)) : NO)

#define kNaviHeight self.navigationController.navigationBar.height + CGRectGetHeight([UIApplication sharedApplication].statusBarFrame)

#define KIphoneFullScreen (kIphoneX||KIphoneXMAX||KIphoneXR)
#define kIPhoneX_BOTTOM_HEIGHT  (KIphoneFullScreen?34:0)
#define kIPhoneX_TOP_HEIGHT  (KIphoneFullScreen?24:0)
#define RGBCOLOR(R,G,B)  [UIColor colorWithRed:R/255.0 green:G/255.0 blue:B/255.0 alpha:1]
#define NAV_HEIGHT ([[UIScreen mainScreen] bounds].size.height>=812)?88:64
#define LeeWeakSelf(type)  __weak typeof(type) weak##type = type;
#define SHOW_TEXT(text) MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:[UIApplication sharedApplication].keyWindow animated:YES];hud.mode = MBProgressHUDModeText;  hud.labelText = text;hud.removeFromSuperViewOnHide = YES;[hud hide:YES afterDelay:1.5];

#define kReadSpaceX 15
#define kReadingTopH 40
#define kReadingBottomH 35
#define kReadingFrame CGRectMake(kReadSpaceX, kReadingTopH, kScreenWidth - kReadSpaceX*2, kScreenHeight - kReadingTopH - kReadingBottomH - kSafeAreaInsets.safeAreaInsets.top - kSafeAreaInsets.safeAreaInsets.bottom)
#endif /* XLBook_pch */
